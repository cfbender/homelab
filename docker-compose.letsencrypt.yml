version: "3.7"

services:
  netdata:
    labels:
      traefik.enable: "true"
      traefik.docker.network: homelab_default
      traefik.http.routers.netdata.tls.certresolver: prod
      traefik.http.routers.netdata.rule: Host(`${NETDATA_HOST}`)
      traefik.http.routers.netdata.middlewares: hsts-header, traefik-forward-auth

  traefik-forward-auth:
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik-forward-auth.tls.certresolver: prod
      traefik.http.routers.traefik-forward-auth.rule: Host(`${AUTH_HOST}`)
      traefik.http.routers.traefik-forward-auth.middlewares:  traefik-forward-auth
      traefik.http.middlewares.traefik-forward-auth.forwardauth.address: http://traefik-forward-auth:4181
      traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders: X-Forwarded-User
      traefik.http.services.traefik-forward-auth.loadbalancer.server.port: 4181

  home:
    labels:
      traefik.enable: "true"
      traefik.http.routers.home.tls.certresolver: prod
      traefik.http.routers.home.rule: Host(`${HOME_ASSISTANT_HOST}`)
      traefik.http.routers.home.middlewares: hsts-header
      traefik.http.services.home.loadbalancer.server.port: 8123
      traefik.http.services.home.loadbalancer.server.scheme: http

  esphome:
    labels:
      traefik.enable: "true"
      traefik.docker.network: homelab_default
      traefik.http.routers.esphome.tls.certresolver: prod
      traefik.http.routers.esphome.rule: Host(`${ESPHOME_HOST}`)
      traefik.http.routers.esphome.middlewares: hsts-header, traefik-forward-auth
      traefik.http.services.esphome.loadbalancer.server.port: 6052
      traefik.http.services.esphome.loadbalancer.server.scheme: http

  code:
    labels:
      traefik.enable: "true"
      traefik.docker.network: homelab_default
      traefik.http.routers.code.tls.certresolver: prod
      traefik.http.routers.code.rule: Host(`${CODE_HOST}`)
      traefik.http.routers.code.middlewares: hsts-header, traefik-forward-auth
      traefik.http.services.code.loadbalancer.server.port: ${CODE_PORT}
      traefik.http.services.code.loadbalancer.server.scheme: http

  personal-site:
    labels:
      traefik.enable: "true"
      traefik.docker.network: homelab_default
      traefik.http.routers.personal-site.tls.certresolver: prod
      traefik.http.routers.personal-site.rule: "Host(`${PERSONAL_SITE_HOST}`) || Host(`${COOKIE_DOMAIN}`)"
      traefik.http.routers.personal-site.middlewares: hsts-header
      traefik.http.routers.personal-site-dashboard.tls.certresolver: prod
      traefik.http.routers.personal-site-dashboard.rule: "(Host(`${PERSONAL_SITE_HOST}`) || Host(`${COOKIE_DOMAIN}`)) && PathPrefix(`${DASHBOARD_PATH}`)"
      traefik.http.routers.personal-site-dashboard.middlewares: hsts-header, traefik-forward-auth
      traefik.http.services.personal-site.loadbalancer.server.port: ${WWW_PORT}
      traefik.http.services.personal-site.loadbalancer.server.scheme: http

  adguard:
    labels:
      traefik.enable: "true"
      traefik.http.routers.adguard.tls.certresolver: prod
      traefik.http.routers.adguard.rule: Host(`${ADGUARD_HOST}`)
      traefik.http.routers.adguard.middlewares: hsts-header
      # Be sure to configure this after install to bind to this port instead of 80!
      traefik.http.services.adguard.loadbalancer.server.port: 3333 
      traefik.http.services.adguard.loadbalancer.server.scheme: http

  portainer:
    labels:
      traefik.enable: "true"
      traefik.http.routers.portainer.tls.certresolver: prod
      traefik.http.routers.portainer.rule: Host(`${PORTAINER_HOST}`)
      traefik.http.routers.portainer.middlewares: hsts-header
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      traefik.http.services.portainer.loadbalancer.server.scheme: http

  unifi:
    labels:
      traefik.enable: "true"
      traefik.http.routers.unifi.tls.certresolver: prod
      traefik.http.routers.unifi.rule: Host(`${UNIFI_HOST}`)
      traefik.http.routers.unifi.middlewares: hsts-header
      traefik.http.services.unifi.loadbalancer.server.port: 8443
      traefik.http.services.unifi.loadbalancer.server.scheme: https

  # https://hub.docker.com/_/traefik/
  traefik:
    image: traefik:latest
    restart: unless-stopped
    environment:
      TZ: "${TZ}"
      CF_API_EMAIL: "${CF_API_EMAIL}"
      CF_API_KEY: "${CF_API_KEY}"
    networks:
      - default
    ports:
      - 80:80/tcp
      - 443:443/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATA_DIR}/traefik:/etc/traefik:rw
    dns:
      - 1.1.1.1
      - 1.0.0.1
    command:
      - "--log.level=INFO"
      - "--api=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesResolvers.prod.acme.dnschallenge=true"
      - "--certificatesResolvers.prod.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.prod.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.prod.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.prod.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.staging.acme.dnschallenge=true"
      - "--certificatesResolvers.staging.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.staging.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.staging.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.staging.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--serversTransport.insecureSkipVerify=true"
      - "--pilot.token=${PILOT_TOKEN}"
    labels:
      traefik.enable: "true"
      traefik.docker.network: homelab_default
      traefik.http.routers.traefik.tls.certresolver: prod
      traefik.http.routers.traefik.rule: Host(`${TRAEFIK_HOST}`)
      traefik.http.routers.traefik.middlewares: hsts-header, traefik-forward-auth
      traefik.http.routers.traefik.service: api@internal
      traefik.http.middlewares.test-auth.basicauth.users: "${BASICAUTH_USERS}"
      traefik.http.middlewares.basicauth.basicauth.usersfile: /etc/traefik/.htpasswd
      traefik.http.middlewares.ipallowlist.ipwhitelist.sourcerange: "${IPALLOWLIST}"
      traefik.http.middlewares.hsts-header.headers.customResponseHeaders.Strict-Transport-Security: "max-age=63072000"
    extra_hosts:
      - host.docker.internal:172.17.0.1
