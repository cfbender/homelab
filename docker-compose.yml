version: "3.7"

networks:
  default:

services:
  # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata
    restart: unless-stopped
    hostname: ${NETDATA_HOST}
    environment:
      PGID: ${DOCKER_PGID}
      TZ: ${TZ}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - default
    dns:
      - 1.1.1.1
      - 1.0.0.1

  # https://www.home-assistant.io/
  home:
    image: lscr.io/linuxserver/homeassistant
    restart: unless-stopped
    network_mode: host
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - ${CONFIG_DIR}/home:/config
      - /etc/localtime:/etc/localtime:ro
      - ./fail2ban:/fail2ban
    devices: 
      - /dev/ttyUSB1:/dev/ttyUSB1

  # https://github.com/esphome/esphome
  esphome:
    image: esphome/esphome
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      ESPHOME_DASHBOARD_USE_PING: "true"
    volumes:
      - ${CONFIG_DIR}/esphome:/config
    networks:
      - default

  # https://github.com/cdr/code-server
  code:
    image: lscr.io/linuxserver/code-server
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
      SUDO_PASSWORD_HASH: ${CODE_SUDO_PASSWORD_HASH} 
      PORT: ${CODE_PORT}
    volumes:
      - ${CONFIG_DIR}/code:/config
      - ${CODE_DIR}:/home/code
    networks:
      - default
    dns:
      - 1.1.1.1
      - 1.0.0.1

  # https://github.com/cfbender/personal-site
  personal-site:
    build:
      context: ../personal-site
      dockerfile: Dockerfile
      args:
        - SHOW_DASHBOARD=true
    restart: unless-stopped
    environment:
      PORT: ${WWW_PORT}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      HOSTNAME: ${COOKIE_DOMAIN}
    networks:
      - default
    dns:
      - 1.1.1.1
      - 1.0.0.1
    labels:
      com.centurylinklabs.watchtower.enable: "false"

  # https://registry.hub.docker.com/r/adguard/adguardhome
  adguard:
    image: adguard/adguardhome
    restart: unless-stopped
    network_mode: host
    volumes:
      - ${DATA_DIR}/adguard:/opt/adguardhome/work
      - ${CONFIG_DIR}/adguard:/opt/adguardhome/conf
    ports:
      - "53:53/tcp"
      - "3000:3000/tcp"
    expose:
      - 53

 # https://github.com/thomseddon/traefik-forward-auth
  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    environment:
      - PROVIDERS_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - PROVIDERS_GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SECRET=${AUTH_SECRET}
      - WHITELIST=${OAUTH_WHITELIST}
      - LOG_LEVEL=debug
      - AUTH_HOST=${AUTH_HOST}
      - COOKIE_DOMAIN=${COOKIE_DOMAIN}
    networks:
      - default
    dns:
      - 1.1.1.1
      - 1.0.0.1

  # https://github.com/containrrr/watchtower/ 
  watchtower:
    image: containrrr/watchtower
    environment:
      TZ: ${TZ}
      WATCHTOWER_NOTIFICATIONS: "shoutrrr"
      WATCHTOWER_NOTIFICATION_URL: ${WATCHTOWER_NOTIFICATION_URL}
    command: --schedule "0 0 20 * * *" # runs daily at 8 PM
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    dns:
      - 1.1.1.1
      - 1.0.0.1

  # https://github.com/portainer/portainer
  portainer:
    image: portainer/portainer-ce
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATA_DIR}/portainer:/data
    networks:
      - default
    dns:
      - 1.1.1.1
      - 1.0.0.1

  # https://github.com/zwave-js/zwavejs2mqtt
  zwave:
    image: zwavejs/zwavejs2mqtt
    restart: unless-stopped
    tty: true
    volumes:
      - ${DATA_DIR}/zwavejs2mqtt:/usr/src/app/store
    devices: 
      - ${ZWAVE_SERIAL_PATH}:/dev/zwave
    ports:
      - 8484:3000
    dns:
      - 1.1.1.1
      - 1.0.0.1

  # https://github.com/linuxserver/docker-unifi-controller
  unifi:
    image: lscr.io/linuxserver/unifi-controller
    restart: unless-stopped
    network_mode: host
    environment: 
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - ${CONFIG_DIR}/unifi:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 6789:6789 # optional

  # https://github.com/BookStackApp/BookStack
  bookstack:
    image: lscr.io/linuxserver/bookstack
    restart: unless-stopped
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      APP_URL: https://${BOOKSTACK_HOST}
      DB_HOST: bookstack_db
      DB_DATABASE: bookstackapp
      DB_USERNAME: ${BOOKSTACK_DB_USER}
      DB_PASSWORD: ${BOOKSTACK_DB_PASS}
    volumes:
      - ${DATA_DIR}/bookstack:/config
    depends_on:
      - bookstack_db
    networks:
      - default
    dns:
      - 1.1.1.1
      - 1.0.0.1

  bookstack_db:
    image: lscr.io/linuxserver/mariadb
    restart: unless-stopped
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      MYSQL_DATABASE: bookstackapp
      MYSQL_USER: ${BOOKSTACK_DB_USER}
      MYSQL_PASSWORD: ${BOOKSTACK_DB_PASS}
      MYSQL_ROOT_PASSWORD: ${BOOKSTACK_DB_ROOT_PASS}
    volumes:
      - ${DATA_DIR}/bookstack_db:/config
    networks:
      - default

  # https://github.com/linuxserver/docker-wireguard
  wireguard:
    image: lscr.io/linuxserver/wireguard
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      SERVERURL: ${WIREGUARD_HOST}
      SERVERPORT: 51820
      PEERS: 5
      PEERDNS: auto
    ports:
      - 51820:51820/udp
    volumes:
      - ${CONFIG_DIR}/wireguard:/config
      - /lib/modules:/lib/modules
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1

  mosquitto:
    image: eclipse-mosquitto
    restart: unless-stopped
    environment:
      TZ: ${TZ}
    ports:
      - 1883:1883/tcp
      - 9001:9001/tcp
    expose:
      - 1883
      - 9001
    volumes:
      - ${CONFIG_DIR}/mosquitto:/mosquitto/config
      - ${DATA_DIR}/mosquitto:/mosquitto/data
      - ${DATA_DIR}/mosquitto/log:/mosquitto/log
      - /etc/localtime:/etc/localtime:ro
  
  fail2ban:
    image: crazymax/fail2ban:latest
    network_mode: host
    environment:
      TZ: ${TZ}
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - ./fail2ban:/data
      - ./traefik/log/access.log:/var/log/access.log:ro
      - ${CONFIG_DIR}/home/home-assistant.log:/var/log/home-assistant.log:ro
      - /var/log/auth.log:/var/log/auth.log:ro

  wyze-bridge:
    image: mrlt8/wyze-bridge:latest
    environment:
      WYZE_EMAIL: ${WYZE_EMAIL}
      WYZE_PASSWORD: ${WYZE_PASSWORD}
      MQTT_HOST: ${MOSQUITTO_HOST}
      MQTT_AUTH: ${MQTT_AUTH}
      MQTT_DTOPIC: homeassistant
    volumes:
      - ${DATA_DIR}/wyze:/tokens
    ports:
      - 8554:8554
      - 8888:8888


